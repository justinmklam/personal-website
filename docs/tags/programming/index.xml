<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Justin MK Lam | Portfolio</title>
    <link>http://justinmklam.com/tags/programming/</link>
    <description>Recent content in Programming on Justin MK Lam | Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Feb 2018 17:02:25 -0800</lastBuildDate>
    
	<atom:link href="http://justinmklam.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Synchronous vs Asynchronous Ping Sweep in C# Windows Form</title>
      <link>http://justinmklam.com/posts/2018/02/ping-sweeper/</link>
      <pubDate>Fri, 09 Feb 2018 17:02:25 -0800</pubDate>
      
      <guid>http://justinmklam.com/posts/2018/02/ping-sweeper/</guid>
      <description>As a mechatronics engineer (in training), sometimes I like to pretend that I also know how to program.
In my most recent adventures to software land at MistyWest, I needed to write an application in C# that involved doing a ping sweep to find devices that were physically connected through ethernet. Since Google and Stack Overflow are my two best friends, I was able to find (what seemed to be) an off-the-net solution quite quickly.</description>
    </item>
    
    <item>
      <title>Debugger Setup with GDB &#43; OpenOCD in Visual Studio Code</title>
      <link>http://justinmklam.com/posts/2017/10/vscode-debugger-setup/</link>
      <pubDate>Sun, 29 Oct 2017 14:24:52 -0700</pubDate>
      
      <guid>http://justinmklam.com/posts/2017/10/vscode-debugger-setup/</guid>
      <description>Visual Studio Code&amp;rsquo;s combination of functionality, customizability, and aesthetics makes it one of my favourite code editors. As such, I was set on making it work with embedded development since I was getting started with the STM32 line of microcontrollers. I was following the steps outlined in Mastering STM32 by Carmine Noviello (which is an excellent resource) until it said to use Eclipse, because life&amp;rsquo;s too short to use software with unnecessary bloat.</description>
    </item>
    
    <item>
      <title>The Making of Project Haikuza: Part 2</title>
      <link>http://justinmklam.com/posts/2015/making-haikuza-ii/</link>
      <pubDate>Thu, 06 Aug 2015 23:49:59 -0700</pubDate>
      
      <guid>http://justinmklam.com/posts/2015/making-haikuza-ii/</guid>
      <description>The format of this series is an outline of my thought process during the development of @thehaikuza.
Poetry is hard To write when algorithms Are extremely dumb.  I dont want my haiku generator to be a vegetarian chef. There&amp;rsquo;s nothing wrong with always making word salad, but eventually it&amp;rsquo;ll have to learn to make fancier things. A poetic risotto would be nice from time to time.
Leaving @thehaikuza to make complete gibberish wasnt what I had intended.</description>
    </item>
    
    <item>
      <title>The Making of Project Haikuza: Part 1</title>
      <link>http://justinmklam.com/posts/2015/making-haikuza-i/</link>
      <pubDate>Sun, 12 Jul 2015 23:49:52 -0700</pubDate>
      
      <guid>http://justinmklam.com/posts/2015/making-haikuza-i/</guid>
      <description>The format of this series is an outline of my thought process during the development of @thehaikuza.
Haikus are simple Even children can write them maybe programs too?  Nothing is cooler than algorithmic poetry. Except for maybe Carl Sagan. I heard he was a pretty cool guy.
I was listening to the radio while driving home one Sunday evening, and an ad came up for a university that was submitting computer-generated poetry to a literature competition.</description>
    </item>
    
  </channel>
</rss>