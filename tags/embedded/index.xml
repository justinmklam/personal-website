<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>embedded on Justin MK Lam | Blog</title><link>http://justinmklam.com/tags/embedded/</link><description>Recent content in embedded on Justin MK Lam | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Feb 2021 08:36:18 -0800</lastBuildDate><atom:link href="http://justinmklam.com/tags/embedded/index.xml" rel="self" type="application/rss+xml"/><item><title>Precision Sourdough: A Smart Lid for Your Starter</title><link>http://justinmklam.com/posts/2021/02/levain-monitor/</link><pubDate>Mon, 22 Feb 2021 08:36:18 -0800</pubDate><guid>http://justinmklam.com/posts/2021/02/levain-monitor/</guid><description>A few years ago, I had the idea to track my sourdough starter using computer vision. It was neat to monitor it this way, but it was fairly impractical to do for each feeding since it required setting up a camera, downloading the images, and doing some manual image cropping before running it through my analysis script. The analysis was also only done after the fact, and what I really wanted was something that could tell me when the starter was ready to be used (or fed), or, if I missed the window of opportunity, how long ago it peaked.</description></item><item><title>Nordic nRF52 Development with Visual Studio Code</title><link>http://justinmklam.com/posts/2019/04/vscode-nrf52/</link><pubDate>Thu, 25 Apr 2019 14:14:25 -0700</pubDate><guid>http://justinmklam.com/posts/2019/04/vscode-nrf52/</guid><description>A few years ago, I created a tutorial on setting up Visual Studio Code for development with the STM32. Since I&amp;rsquo;ve also been developing on the Nordic nRF52, I thought I&amp;rsquo;d share another tutorial to show how a project can be set up, flashed, and debugged using Visual Studio Code.
The template project discussed in this post can be found on Github.
Instructions The Nordic toolchain is cross-platform, but the instructions below are specifically for Linux.</description></item><item><title>Debugger Setup with GDB + OpenOCD in Visual Studio Code</title><link>http://justinmklam.com/posts/2017/10/vscode-debugger-setup/</link><pubDate>Sun, 29 Oct 2017 14:24:52 -0700</pubDate><guid>http://justinmklam.com/posts/2017/10/vscode-debugger-setup/</guid><description>Visual Studio Code&amp;rsquo;s combination of functionality, customizability, and aesthetics makes it one of my favourite code editors. As such, I was set on making it work with embedded development since I was getting started with the STM32 line of microcontrollers. I was following the steps outlined in Mastering STM32 by Carmine Noviello (which is an excellent resource) until it said to use Eclipse, because life&amp;rsquo;s too short to use software with unnecessary bloat.</description></item><item><title>ESP8266 Sous Vide Controller</title><link>http://justinmklam.com/posts/2017/05/sous-vide-controller/</link><pubDate>Sun, 05 Feb 2017 12:28:27 -0800</pubDate><guid>http://justinmklam.com/posts/2017/05/sous-vide-controller/</guid><description>Project Summary Objective: Create a small, modular controller to regulate the temperature of a water bath.
Motivation: To get in on this cooking fad without dropping fat stacks of cash on an immersion circulator.
Features:
Crisp 0.96&amp;quot; OLED display Pushbutton rotary encoder provides simple user interaction Removable temperature plug through standard 3-pos audio connector Temperature controlled outlet to be used with any heating element (ie. rice cooker, slow cooker, etc.</description></item></channel></rss>